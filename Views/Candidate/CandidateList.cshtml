@model List<OVS.Models.Candidate>
@{
    ViewData["Title"] = "Candidate List";
    Layout = "_AdminSidelayout";
}

<div class="container py-5">
    <h1 class="fw-bold text-primary text-center mb-4">Candidate Management</h1>

    <!-- Search Box -->
    <div class="mb-4">
        <div class="input-group">
            <input type="text" id="searchQuery" class="form-control" placeholder="Search by name or party..." />
            <button id="searchButton" class="btn-custom">Search</button>
        </div>
    </div>

    <!-- Add New Candidate Button -->
    <div class="text-center mb-4">
        <a href="@Url.Action("AddCandidate", "Candidate")" class="btn btn-success btn-lg">Add New Candidate</a>
    </div>

    <!-- Candidate Table -->
    <div id="candidateResults">
        @await Html.PartialAsync("_CandidateTablePartial", Model)
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("searchButton").addEventListener("click", function () {
            const query = document.getElementById("searchQuery").value;

            fetch('@Url.Action("GetFilteredCandidates", "Candidate")?searchQuery=' + encodeURIComponent(query), {
                method: "GET",
                headers: {
                    "X-Requested-With": "XMLHttpRequest"
                }
            })
            .then(response => response.text())
            .then(data => {
                document.getElementById("candidateResults").innerHTML = data;
            })
            .catch(error => console.error('Error:', error));
        });
    </script>
}
